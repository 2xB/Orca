//--------------------------------------------------------
// ORBt610Model
// Created by Mark  A. Howe on Mon Jan 23, 2012
// Code partially generated by the OrcaCodeWizard. Written by Mark A. Howe.
// Copyright (c) 2012 University of North Carolina. All rights reserved.
//-----------------------------------------------------------
//This program was prepared for the Regents of the University of 
//North Carolina sponsored in part by the United States 
//Department of Energy (DOE) under Grant #DE-FG02-97ER41020. 
//The University has certain rights in the program pursuant to 
//the contract and the program should not be copied or distributed 
//outside your organization.  The DOE and the University of 
//Washington reserve all rights in the program. Neither the authors,
//University of North Carolina, or U.S. Government make any warranty, 
//express or implied, or assume any liability or responsibility 
//for the use of this software.
//-------------------------------------------------------------

#pragma mark ***Imported Files
#import "ORAdcProcessing.h"
#import "ORSerialPortWithQueueModel.h"

@class ORTimeRate;
@class ORAlarm;

#define kBt610CmdTimeout           2
#define kBt610DelayTime            0.1
#define kBt610ProbeTime            13

@interface ORBt610Model : ORSerialPortWithQueueModel <ORAdcProcessing>
{
    @private
		BOOL            delay;
        NSMutableString* buffer;
		ORTimeRate*		timeRates[8];
		int				count[6];
		float			maxCounts[8];
		float			countAlarmLimit[8];
		int				numSamples;
		int				cycleDuration;

        BOOL            running;
        BOOL            holding;
        NSString*       opTimer;
		NSDate*			cycleStarted;
		int				cycleNumber;
		BOOL			wasRunning;
		int				actualDuration;
        NSString*       measurementDate;

		float			temperature;
		float			humidity;
		int				location;
		int				statusBits;
		int				countUnits;
		int				tempUnits;
		BOOL			probing;
		int				holdTime;
		BOOL			isLog;
		BOOL			dumpInProgress;
		int				dumpCount;
		ORAlarm*		sensorErrorAlarm;
		ORAlarm*		lowBatteryAlarm;
        ORAlarm*        countSize1Alarm;
        ORAlarm*        countSize2Alarm;
        ORAlarm*		missingCyclesAlarm;
		BOOL			sentStartOnce;
		BOOL			sentStopOnce;
        int             missedCycleCount;
}


#pragma mark ***Initialization
- (id)   init;
- (void) dealloc;
- (void) dataReceived:(NSNotification*)note;

#pragma mark ***Accessors
- (void) checkAlarms;
- (int) dumpCount;
- (void) setDumpCount:(int)aDumpCount;
- (BOOL) dumpInProgress;
- (void) setDumpInProgress:(BOOL)aDumpInProgress;
- (BOOL) isLog;
- (void) setIsLog:(BOOL)aIsLog;
- (int) holdTime;
- (void) setHoldTime:(int)aHoldTime;
- (void) setOpTimer:(NSString*)aValue;
- (NSString*) opTimer;
- (int) tempUnits;
- (void) setTempUnits:(int)aTempUnits;
- (int) countUnits;
- (void) setCountUnits:(int)aCountUnits;
- (int) statusBits;
- (void) setStatusBits:(int)aStatusBits;
- (int) location;
- (void) setLocation:(int)aLocation;
- (float) humidity;
- (void) setHumidity:(float)aHumidity;
- (float) temperature;
- (void) setTemperature:(float)aTemperature;
- (int) actualDuration;
- (void) setActualDuration:(int)aActualDuration;
- (NSString*) measurementDate;
- (void) setMeasurementDate:(NSString*)aMeasurementDate;
- (ORTimeRate*)timeRate:(int)index;
- (int) cycleNumber;
- (void) setCycleNumber:(int)aCycleNumber;
- (NSDate*) cycleStarted;
- (void) setCycleStarted:(NSDate*)aCycleStarted;
- (BOOL) running;
- (void) setRunning:(BOOL)aRunning;
- (BOOL) holding;
- (void) setHolding:(BOOL)aState;
- (int) cycleDuration;
- (void) setCycleDuration:(int)aCycleDuration;
- (int) numSamples;
- (void) setNumSamples:(int)aValue;
- (void) setCount:(int)index value:(int)aValue;
- (int) count:(int)index;
- (NSString*) countingModeString;
- (float) countAlarmLimit:(int)index;
- (void) setIndex:(int)index countAlarmLimit:(float)aCountAlarmLimit;
- (float) maxCounts:(int)index;
- (void) setIndex:(int)index maxCounts:(float)aMaxCounts;
- (void) setMissedCycleCount:(int)aValue;
- (int) missedCycleCount;
- (void) getOpStatus;
#pragma mark ***Polling
- (void) startCycle:(BOOL)force;
- (void) startCycle;
- (void) stopCycle;

#pragma mark ***Commands
- (void) sendAllData;
- (void) sendNewData;
- (void) setDate;
- (void) sendClearData;
- (void) sendStart;
- (void) sendEnd;
- (void) getSampleTime;
- (void) getLocation;
- (void) getHoldTime;
- (void) getUnits;	
- (void) sendCountingTime:(int)aValue;
- (void) sendNumSamples:(int)aValue;
- (void) sendID:(int)aValue;
- (void) sendHoldTime:(int)aValue;
- (void) sendTempUnit:(int)aTempUnit countUnits:(int)aCountUnit;
- (void) probe;

#pragma mark •••Adc Processing Protocol
- (void)processIsStarting;
- (void)processIsStopping;
- (void) startProcessCycle;
- (void) endProcessCycle;
- (BOOL) processValue:(int)channel;
- (void) setProcessOutput:(int)channel value:(int)value;
- (NSString*) processingTitle;
- (void) getAlarmRangeLow:(double*)theLowLimit high:(double*)theHighLimit  channel:(int)channel;
- (double) convertedValue:(int)channel;
- (double) maxValueForChan:(int)channel;
- (BOOL) dataForChannelValid:(int)aChannel;

#pragma mark •••Archival
- (id)   initWithCoder:(NSCoder*)decoder;
- (void) encodeWithCoder:(NSCoder*)encoder;

@end

extern NSString* ORBt610ModelDumpCountChanged;
extern NSString* ORBt610ModelDumpInProgressChanged;
extern NSString* ORBt610ModelIsLogChanged;
extern NSString* ORBt610ModelHoldTimeChanged;
extern NSString* ORBt610ModelTempUnitsChanged;
extern NSString* ORBt610ModelCountUnitsChanged;
extern NSString* ORBt610ModelStatusBitsChanged;
extern NSString* ORBt610ModelLocationChanged;
extern NSString* ORBt610ModelHumidityChanged;
extern NSString* ORBt610ModelTemperatureChanged;
extern NSString* ORBt610ModelActualDurationChanged;
extern NSString* ORBt610ModelCountAlarmLimitChanged;
extern NSString* ORBt610ModelMaxCountsChanged;
extern NSString* ORBt610ModelCycleNumberChanged;
extern NSString* ORBt610ModelCycleStartedChanged;
extern NSString* ORBt610ModelRunningChanged;
extern NSString* ORBt610ModelCycleDurationChanged;
extern NSString* ORBt610ModelNumSamplesChanged;
extern NSString* ORBt610ModelCountChanged;
extern NSString* ORBt610ModelPollTimeChanged;
extern NSString* ORBt610ModelMissedCountChanged;
extern NSString* ORBt610ModelOpTimerChanged;
extern NSString* ORBt610ModelMeasurementDateChanged;

extern NSString* ORBt610Lock;

